<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <import resource="equality.xml"/>
    <import resource="form_analyzez_config.xml"/>
    <import resource="persistance-test.xml"/>

    <bean id="signatureDecomposer" class="ru.pavelyurkin.musiccomposer.core.decomposer.SignatureDecomposer">
        <property name="minSignatureLength" value="7"/>
        <property name="maxSignatureLength" value="12"/>
        <property name="melodyEqualityAnalyzer" ref="melodyEqualityAnalyzer"/>
        <!--<property name="melodyEqualityAnalyzer" ref="MelodyEqualityAnalyzerNotator"/>-->
    </bean>

    <bean id="melodyEqualityAnalyzerNotator" class="ru.pavelyurkin.musiccomposer.core.decomposer.melody.analyzer.MelodyEqualityAnalyzerNotator">
        <property name="notateSuccessful" value="true"/>
        <property name="analyzer" ref="melodyEqualityAnalyzer"/>
    </bean>

    <bean id="melodyEqualityAnalyzer" class="ru.pavelyurkin.musiccomposer.core.decomposer.melody.analyzer.MelodyEqualityAnalyzerImpl" >
        <property name="equalityTestPassThreshold" value="0.75"/>
        <property name="countourEquality" ref="countourEqualityTestWrapper"/>
        <property name="intervalsEquality" ref="intervalsEqualityTestWrapper"/>
        <property name="inversionEquality" ref="inversionEqualityTestWrapper"/>
        <property name="orderEquality" ref="orderEqualityTestWrapper"/>
        <property name="rhythmEquality" ref="rhythmEqualityTestWrapper"/>
    </bean>

    <bean id="simpleComposeBlockProvider" class="ru.pavelyurkin.musiccomposer.core.composer.ComposeBlockProvider">
        <property name="firstBlockProvider" ref="randomFirstBlockProvider"/>
        <property name="nextFormBlockProvider" ref="nextFormBlockProviderImpl"/>
        <property name="nextBlockProvider" ref="randomNextBlockProvider"/>
    </bean>

    <context:component-scan base-package="ru.pavelyurkin.musiccomposer"/>
    <tx:annotation-driven/>

</beans>